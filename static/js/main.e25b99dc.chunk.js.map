{"version":3,"sources":["components/WeatherItem/index.js","components/WeatherItem/weather-item.js","components/WeatherList/index.js","components/WeatherList/weather-list.js","containers/WeatherAdd/index.js","containers/WeatherAdd/weather-add.js","containers/App/index.js","containers/App/app.js","index.js"],"names":["WeatherItem","weather","name","main","wind","clouds","id","deleteCity","className","onClick","title","type","src","icon","alt","parseInt","temp","humidity","speed","all","WeatherList","enter","scale","opacity","duration","leave","appear","map","weatherItem","key","WeatherAdd","addCity","useState","value","setValue","isOpen","setIsOpen","onSubmit","e","preventDefault","tr","option","cities","city","Option","visible","onOk","onCancel","centered","dataSource","onChange","placeholder","filterOption","inputValue","props","children","toLowerCase","indexOf","disabled","App","setWeather","isLoading","setIsLoading","isErrorIp","setIsErrorIp","isError","setIsError","url","appId","useEffect","a","async","axios","get","then","response","data","ip","catch","error","undefined","fetchData","message","banner","closable","idx","findIndex","item","slice","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e25b99dc.chunk.js","sourcesContent":["import WeatherItem from './weather-item';\n\nexport default WeatherItem;\n","import React from 'react';\r\nimport { Icon } from 'antd';\r\nimport './style.sass';\r\n\r\nconst WeatherItem = ({\r\n  weather: { name, weather, main, wind, clouds, id },\r\n  deleteCity\r\n}) => {\r\n  return (\r\n    <div className='item'>\r\n      <div\r\n        className='delete'\r\n        onClick={() => deleteCity(id)}\r\n        title='Удалить город'>\r\n        <Icon type='close-circle' />\r\n      </div>\r\n      <div className='name'>{name}</div>\r\n      <div className='box'>\r\n        <div className='img'>\r\n          <img\r\n            src={`http://openweathermap.org/img/w/${weather[0].icon}.png`}\r\n            alt='weather-icon'\r\n            title={weather[0].main}\r\n          />\r\n        </div>\r\n        <div className='temp'>{parseInt(main.temp)}&#176;C</div>\r\n      </div>\r\n      <div className='box2'>\r\n        <p className='humidity'>Влажность: {main.humidity}%</p>\r\n        <p className='wind'>Ветер: {wind.speed}м/с</p>\r\n        <p className='clouds'>Облачность: {clouds.all}%</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WeatherItem;\r\n","import WeatherList from './weather-list';\n\nexport default WeatherList;\n","import React from 'react';\r\nimport { TweenOneGroup } from 'rc-tween-one';\r\nimport WeatherItem from '../WeatherItem';\r\nimport './style.sass';\r\n\r\nconst WeatherList = ({ weather, deleteCity }) => {\r\n  return (\r\n    <div className='list'>\r\n      <TweenOneGroup\r\n        enter={{\r\n          scale: 0.6,\r\n          opacity: 0,\r\n          type: 'from',\r\n          duration: 200\r\n        }}\r\n        leave={{ opacity: 0, scale: 0, duration: 200 }}\r\n        appear={false}>\r\n        {weather.map(weatherItem => (\r\n          <WeatherItem\r\n            weather={weatherItem}\r\n            key={weatherItem.id}\r\n            deleteCity={deleteCity}\r\n          />\r\n        ))}\r\n      </TweenOneGroup>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WeatherList;\r\n","import WeatherAdd from './weather-add';\n\nexport default WeatherAdd;\n","import React, { useState } from 'react';\r\nimport { Modal, AutoComplete, Button, Icon } from 'antd';\r\nimport { transliterate as tr } from 'transliteration';\r\nimport './style.sass';\r\nimport cities from '../../cities.json';\r\n\r\nconst WeatherAdd = ({ addCity }) => {\r\n  const [value, setValue] = useState('');\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n    addCity(tr(value));\r\n    setValue('');\r\n    setIsOpen(false);\r\n  };\r\n\r\n  const onClick = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  const onChange = value => {\r\n    setValue(value);\r\n  };\r\n\r\n  const option = cities.map(city => (\r\n    <AutoComplete.Option key={city.title} value={city.title}>\r\n      {city.title}\r\n    </AutoComplete.Option>\r\n  ));\r\n\r\n  const filterOption = (inputValue, option) => {\r\n    return (\r\n      option.props.children.toLowerCase().indexOf(inputValue.toLowerCase()) !==\r\n      -1\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className='add_wrapper'>\r\n      <div className='add'>\r\n        <Icon type='plus-circle' onClick={onClick} title='Добавить город' />\r\n      </div>\r\n      <Modal visible={isOpen} onOk={onClick} onCancel={onClick} centered>\r\n        <form className='form' onSubmit={onSubmit}>\r\n          <AutoComplete\r\n            dataSource={option}\r\n            onChange={onChange}\r\n            placeholder='Введите город'\r\n            value={value}\r\n            filterOption={filterOption}></AutoComplete>\r\n          <Button type='primary' onClick={onSubmit} disabled={!value}>\r\n            Добавить\r\n          </Button>\r\n        </form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WeatherAdd;\r\n","import App from './app';\n\nexport default App;\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Alert } from 'antd';\r\nimport WeatherList from '../../components/WeatherList';\r\nimport WeatherAdd from '../WeatherAdd';\r\nimport './style.sass';\r\n\r\nconst App = () => {\r\n  const [weather, setWeather] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isErrorIp, setIsErrorIp] = useState(false);\r\n  const [isError, setIsError] = useState(false);\r\n\r\n  const url = `https://api.openweathermap.org/data/2.5/weather`;\r\n  const appId = `e7b7e505b9f6c9fb24a4e048a62eeeab`;\r\n\r\n  const fetchData = async () => {\r\n    setIsLoading(true);\r\n    const ip = await axios\r\n      .get(`https://ipapi.co/json/`)\r\n      .then(response => response.data);\r\n\r\n    await axios\r\n      .get(`${url}?q=${ip.city}&units=metric&APPID=${appId}`)\r\n      .then(response => setWeather([...weather, response.data]))\r\n      .catch(error => {\r\n        if (error.response || ip.city === undefined) {\r\n          setIsErrorIp(true);\r\n        }\r\n      });\r\n\r\n    setIsLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  const deleteCity = id => {\r\n    const idx = weather.findIndex(item => item.id === id);\r\n    setWeather([...weather.slice(0, idx), ...weather.slice(idx + 1)]);\r\n  };\r\n\r\n  const addCity = async city => {\r\n    setIsError(false);\r\n    await axios\r\n      .get(`${url}?q=${city}&units=metric&APPID=${appId}`)\r\n      .then(response => {\r\n        setWeather([...weather, response.data]);\r\n      })\r\n      .catch(error => {\r\n        if (error.response) {\r\n          setIsError(true);\r\n        }\r\n      });\r\n  };\r\n\r\n  return isLoading ? (\r\n    <div className='loading' />\r\n  ) : (\r\n    <>\r\n      <div className='container'>\r\n        {isErrorIp && (\r\n          <Alert\r\n            message='Не удалось определить ваше местоположение'\r\n            type='error'\r\n            banner\r\n            closable\r\n          />\r\n        )}\r\n        {isError && (\r\n          <Alert\r\n            message='Вы ввели неверный город'\r\n            type='error'\r\n            banner\r\n            closable\r\n          />\r\n        )}\r\n      </div>\r\n      <div className='wrapper'>\r\n        <div className='container'>\r\n          <WeatherList weather={weather} deleteCity={deleteCity} />\r\n          <WeatherAdd addCity={addCity} />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './containers/App';\nimport 'antd/dist/antd.css';\nimport './index.sass';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}